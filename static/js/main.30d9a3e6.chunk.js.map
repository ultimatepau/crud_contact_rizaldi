{"version":3,"sources":["Container/Home.js","Container/Create.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faEdit","faTrash","faEllipsisV","Home","props","getData","a","axios","get","response","status","setState","data","columns","name","options","customBodyRender","val","tableMeta","onClick","handleAction","rowIndex","style","backgroundColor","borderWidth","padding","cursor","marginRight","color","icon","handleDelete","index","state","id","delete","res","alert","message","console","log","history","push","type","this","map","firstName","lastName","age","photo","width","location","search","grow","column","hAlignContent","marginTop","paddingTop","paddingBottom","borderRadius","Date","marginLeft","theme","createMuiTheme","overrides","MuiPaper","root","title","selectableRows","sort","filter","viewColumns","print","download","Component","Create","handleSubmit","e","preventDefault","payload","length","focus","Number","put","post","classes","paddingLeft","paddingRight","charAt","toUpperCase","slice","onSubmit","autoComplete","TextField","disabled","inputRef","input","className","textField","value","required","onChange","target","margin","fullWidth","label","variant","Button","withStyles","App","basename","process","component","exact","path","React","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"gaAQAA,IAAQC,IAAIC,IAAQC,IAASC,KAE7B,IAmHiBC,E,YAtGb,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,QAXmB,sBAWT,4BAAAC,EAAA,sEACiBC,IAAMC,IAAI,qDAD3B,OAEiB,OADjBC,EADA,QAEMC,QAAgB,EAAKC,SAAS,CAAEC,KAAMH,EAASG,KAAKA,OAF1D,2CAXS,EAgBnBC,QAAU,CACN,aAAc,YAAa,MAAO,YAClC,CACIC,KAAM,SACNC,QAAS,CACLC,iBAAkB,SAACC,EAAKC,GACpB,OACI,6BACI,4BAAQC,QAAS,kBAAM,EAAKC,aAAa,OAAQF,EAAUG,WAAWC,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,EAAGC,QAAS,GAAIC,OAAQ,UAAWC,YAAa,KACpK,kBAAC,IAAD,CAAiBC,MAAM,OAAOC,KAAK,UAEvC,4BAAQV,QAAS,kBAAM,EAAKW,aAAaZ,EAAUG,WAAWC,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,EAAGC,QAAS,GAAIC,OAAQ,UAAWC,YAAa,KAC5J,kBAAC,IAAD,CAAiBC,MAAM,OAAOC,KAAK,WAEvC,4BAAQV,QAAS,kBAAM,EAAKC,aAAa,SAAUF,EAAUG,WAAWC,MAAO,CAAEC,gBAAiB,UAAWC,YAAa,EAAGC,QAAS,GAAIC,OAAQ,YAC9I,kBAAC,IAAD,CAAiBE,MAAM,OAAOC,KAAK,qBA/B5C,EAwCnBC,aAxCmB,uCAwCJ,WAAOC,GAAP,mBAAAzB,EAAA,6DACHM,EAAS,EAAKoB,MAAdpB,KACAqB,EAAOrB,EAAKmB,GAAZE,GAFG,kBAIW1B,IAAM2B,OAAO,qDAAuDD,GAJ/E,QAIDE,EAJC,SAKkB,MAAfA,EAAIzB,SACV0B,MAAMD,EAAIvB,KAAKyB,SACf,EAAK1B,SAAS,CAAEC,KAAM,KAAM,kBAAM,EAAKP,cAPpC,gDAUPiC,QAAQC,IAAI,cAAe,KAAM9B,UACjC2B,MAAM,KAAM3B,SAASG,KAAKyB,SAXnB,yDAxCI,wDAuDnBjB,aAAe,SAACN,EAAMiB,GAAW,IACrBnB,EAAS,EAAKoB,MAAdpB,KACR,OAAOE,GACH,IAAK,OACD,EAAKV,MAAMoC,QAAQC,KAAK,QAAS,CAAEC,KAAM,OAAQ9B,KAAMA,EAAKmB,KAC5D,MACJ,IAAK,QAED,MACJ,IAAK,SACD,EAAK3B,MAAMoC,QAAQC,KAAK,UAAW,CAAEC,KAAM,OAAQ9B,KAAMA,EAAKmB,OA/DtE,EAAKC,MAAQ,CACTpB,KAAM,IAHK,E,iFAQf+B,KAAKtC,Y,+BAgEC,IAAD,OACCO,EAAS+B,KAAKX,MAAdpB,KAMN,OALAA,EAAOA,EAAKgC,KAAI,SAAChC,EAAMmB,GAEnB,MAAO,CADqCnB,EAApCiC,UAAoCjC,EAAzBkC,SAAyBlC,EAAfmC,IAAenC,EAAVoC,UAKlC,yBAAK1B,MAAO,CAAE2B,MAAO,SAArB,0BAC4BN,KAAKvC,MAAM8C,SAASC,OAC5C,kBAAC,IAAD,CAAUC,MAAI,EAACC,QAAM,EAACC,cAAc,SAAShC,MAAO,CAAEiC,UAAW,KAC7D,kBAAC,IAAD,KACI,4BAAQpC,QAAS,kBAAM,EAAKf,MAAMoC,QAAQC,KAAK,YAAYnB,MAAO,CAAEE,YAAa,EAAGC,QAAS,GAAI+B,WAAY,GAAIC,cAAe,GAAIC,aAAc,GAAIhC,OAAQ,YAA9J,UACA,4BAAQP,QAAS,kBAAM,EAAKf,MAAMoC,QAAQC,KAAK,SAAU,IAAIkB,OAAOrC,MAAO,CAAEsC,WAAY,GAAIpC,YAAa,EAAGC,QAAS,GAAI+B,WAAY,GAAIC,cAAe,GAAIC,aAAc,GAAIhC,OAAQ,YAAvL,oBAEJ,kBAAC,IAAD,CAAU0B,MAAI,EAAC9B,MAAO,CAAE2B,MAAO,MAAOM,UAAW,KAC7C,kBAAC,IAAD,CAAkBM,MArGhBC,YAAe,CACrCC,UAAW,CACTC,SAAU,CACRC,KAAM,CACJhB,MAAO,aAkGW,kBAAC,IAAD,CACIiB,MAAO,gBACPtD,KAAMA,EACNC,QAAS8B,KAAK9B,QACdE,QAAS,CAAEoD,gBAAgB,EAAOC,MAAM,EAAOC,QAAQ,EAAOC,aAAa,EAAOC,OAAO,EAAOC,UAAU,a,GA/FvHC,a,iCCZnB3E,IAAQC,IAAIC,IAAQC,IAASC,KAE7B,IAEMwE,E,YAEF,WAAYtE,GAAQ,IAAD,8BACf,4CAAMA,KAYVuE,aAbmB,uCAaJ,WAAOC,GAAP,+BAAAtE,EAAA,yDACXsE,EAAEC,iBADS,EAEa,EAAK7C,MAAvB8C,EAFK,EAELA,QAASpC,EAFJ,EAEIA,KACPG,GAHG,EAG0BiC,GAA7BjC,UAAWC,EAHR,EAGQA,SAAUC,EAHlB,EAGkBA,MAE1BF,EAAUkC,OAAS,GALX,uBAMP,EAAKlC,UAAUmC,QANR,kBAOA5C,MAAM,kDAPN,YAURU,EAASiC,OAAS,GAVV,uBAWP,EAAKjC,SAASkC,QAXP,kBAYA5C,MAAM,iDAZN,YAeRW,EAAM,KAfE,wBAgBP,EAAKA,IAAIiC,QAhBF,kBAiBA5C,MAAM,mCAjBN,WAoBX0C,EAAO,eACAA,EADA,CAEH/B,IAAKkC,OAAOH,EAAQ/B,OAEpBd,EAAK6C,EAAQ7C,UACV6C,EAAQ7C,GAzBJ,UA2Bc,SAATS,EA3BL,kCA2B6BnC,IAAM2E,IAAI,qDAAuDjD,EAAI6C,GA3BlG,6DA2BmHvE,IAAM4E,KAAK,oDAAqDL,GA3BnL,6BA2BD3C,EA3BC,OA4BkB,MAAfA,EAAIzB,SACV0B,MAAMD,EAAIvB,KAAKyB,SACf,EAAKjC,MAAMoC,QAAQC,KAAK,MA9BrB,mDAiCPL,MAAM,KAAM3B,SAASG,KAAKyB,SAjCnB,2DAbI,sDAEf,EAAKL,MAAQ,CACTU,KAAMtC,EAAM8C,SAASlB,MAAQ5B,EAAM8C,SAASlB,MAAMU,KAAO,SACzDoC,QAAS1E,EAAM8C,SAASlB,MAAQ5B,EAAM8C,SAASlB,MAAMpB,KAAO,CACxDiC,UAAW,GACXC,SAAU,GACVC,IAAK,GACLC,MAAO,KARA,E,sEAkDT,IAAD,OACGoC,EAAYzC,KAAKvC,MAAjBgF,QADH,EAEqBzC,KAAKX,MAAvB8C,EAFH,EAEGA,QAASpC,EAFZ,EAEYA,KACTG,EAAoCiC,EAApCjC,UAAWC,EAAyBgC,EAAzBhC,SAAUC,EAAe+B,EAAf/B,IAAKC,EAAU8B,EAAV9B,MAClC,OACI,kBAAC,IAAD,CAAUK,QAAM,EAACD,MAAI,EAAC9B,MAAO,CAAE+D,YAAa,OAAQC,aAAc,OAAQ/B,UAAW,KACjF,qCAAWb,EAAK6C,OAAO,GAAGC,cAAgB9C,EAAK+C,MAAM,GAArD,YACA,0BAAMC,SAAU/C,KAAKgC,aAAcgB,aAAa,OAC5C,kBAACC,EAAA,EAAD,CAAWC,SAAmB,SAATnD,EAAiBoD,SAAU,SAACC,GAAY,EAAKlD,UAAYkD,GAAWC,UAAWZ,EAAQa,UAAWC,MAAOrD,EAAWsD,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAO,EAAKjE,SAAS,CAAEmE,QAAQ,eAAMA,EAAP,CAAgBjC,UAAW+B,EAAEyB,OAAOH,WAAYI,OAAO,SAASC,WAAS,EAACC,MAAM,aAAaC,QAAQ,aAC/R,kBAACb,EAAA,EAAD,CAAWC,SAAmB,SAATnD,EAAiBoD,SAAU,SAACC,GAAY,EAAKjD,SAAWiD,GAAUG,MAAOpD,EAAUqD,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAO,EAAKjE,SAAS,CAAEmE,QAAQ,eAAMA,EAAP,CAAgBhC,SAAU8B,EAAEyB,OAAOH,WAAYI,OAAO,SAASC,WAAS,EAACC,MAAM,YAAYC,QAAQ,aAC5P,kBAACb,EAAA,EAAD,CAAWC,SAAmB,SAATnD,EAAiBoD,SAAU,SAACC,GAAY,EAAKhD,IAAMgD,GAAUrD,KAAK,SAASwD,MAAOnD,EAAKoD,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAO,EAAKjE,SAAS,CAAEmE,QAAQ,eAAMA,EAAP,CAAgB/B,IAAK6B,EAAEyB,OAAOH,WAAYI,OAAO,SAASC,WAAS,EAACC,MAAM,MAAMC,QAAQ,aACrP,kBAACb,EAAA,EAAD,CAAWC,SAAmB,SAATnD,EAAiBwD,MAAOlD,EAAOmD,UAAQ,EAACC,SAAU,SAACxB,GAAD,OAAO,EAAKjE,SAAS,CAAEmE,QAAQ,eAAMA,EAAP,CAAgB9B,MAAO4B,EAAEyB,OAAOH,WAAYI,OAAO,SAASC,WAAS,EAACC,MAAM,YAAYC,QAAQ,aAC3L,SAAT/D,GACG,kBAACgE,EAAA,EAAD,CAAQhE,KAAK,SAAS+D,QAAQ,YAAY7E,MAAM,WAAhD,WAKR,yBAAKN,MAAO,CAAEiC,UAAW,KACrB,kBAACmD,EAAA,EAAD,CAAQvF,QAAS,kBAAM,EAAKf,MAAMoC,QAAQC,KAAK,MAAMgE,QAAQ,YAAY7E,MAAM,WAA/E,gB,GAvEC6C,aAoFNkC,eAtFA,SAAA9C,GAAK,MAAK,KAsFV8C,CAAmBjC,GCxEnBkC,E,iLAbX,OACE,kBAAC,IAAD,CAAQC,SAAQ,UAAKC,wBAAL,MACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,UAAWrC,EAAQsC,OAAK,EAACC,KAAK,YACrC,kBAAC,IAAD,CAAOF,UAAWrC,EAAQsC,OAAK,EAACC,KAAK,UACrC,kBAAC,IAAD,CAAOF,UAAWrC,EAAQsC,OAAK,EAACC,KAAK,YACrC,kBAAC,IAAD,CAAOF,UAAW5G,EAAM6G,OAAK,EAACC,KAAK,Y,GAR7BC,IAAMzC,WCEJ0C,QACW,cAA7BC,OAAOlE,SAASmE,UAEe,UAA7BD,OAAOlE,SAASmE,UAEhBD,OAAOlE,SAASmE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL5F,QAAQ4F,MAAMA,EAAM7F,c","file":"static/js/main.30d9a3e6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport FlexView from 'react-flexview'\r\nimport axios from 'axios'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faEdit, faTrash, faEllipsisV)\r\n\r\nconst getMuiTheme = () => createMuiTheme({\r\n    overrides: {\r\n      MuiPaper: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        const response = await axios.get('https://simple-contact-crud.herokuapp.com/contact')\r\n        if(response.status === 200) this.setState({ data: response.data.data})\r\n    }\r\n\r\n    columns = [\r\n        \"First Name\", \"Last Name\", \"Age\", \"Photo Url\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button onClick={() => this.handleAction('edit', tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\", marginRight: 10 }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"edit\" />\r\n                            </button>\r\n                            <button onClick={() => this.handleDelete(tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\", marginRight: 10 }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"trash\" />\r\n                            </button>\r\n                            <button onClick={() => this.handleAction('detail', tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\" }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"ellipsis-v\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    handleDelete = async (index) => {\r\n        const { data } = this.state\r\n        const { id } = data[index]\r\n        try {\r\n            const res = await axios.delete('https://simple-contact-crud.herokuapp.com/contact/' + id)\r\n            if(res && res.status === 202) {\r\n                alert(res.data.message)\r\n                this.setState({ data: [] }, () => this.getData())\r\n            }\r\n        } catch(error) {\r\n            console.log('response : ', error.response)\r\n            alert(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    handleAction = (name, index) => {\r\n        const { data } = this.state\r\n        switch(name) {\r\n            case \"edit\":\r\n                this.props.history.push('/edit', { type: \"edit\", data: data[index] })\r\n                break\r\n            case \"trash\":\r\n                \r\n                break\r\n            case \"detail\":\r\n                this.props.history.push('/detail', { type: \"view\", data: data[index] })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.state\r\n        data = data.map((data, index) => {\r\n            const { firstName, lastName, age, photo } = data\r\n            return [ firstName, lastName, age, photo ]\r\n        })\r\n\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                Current Query String : {this.props.location.search}\r\n                <FlexView grow column hAlignContent=\"center\" style={{ marginTop: 20 }}>\r\n                    <FlexView>\r\n                        <button onClick={() => this.props.history.push('/create')} style={{ borderWidth: 0, padding: 30, paddingTop: 10, paddingBottom: 10, borderRadius: 30, cursor: \"pointer\" }}>Create</button>\r\n                        <button onClick={() => this.props.history.push('/?q=' + +new Date)} style={{ marginLeft: 10, borderWidth: 0, padding: 30, paddingTop: 10, paddingBottom: 10, borderRadius: 30, cursor: \"pointer\" }}>Add Query Param</button>\r\n                    </FlexView>\r\n                    <FlexView grow style={{ width: '80%', marginTop: 20 }}>\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Employee List\"}\r\n                                data={data}\r\n                                columns={this.columns}\r\n                                options={{ selectableRows: false, sort: false, filter: false, viewColumns: false, print: false, download: false }} />\r\n                        </MuiThemeProvider>\r\n                    </FlexView>\r\n                </FlexView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  export default Home","import React, { Component } from 'react'\r\nimport FlexView from 'react-flexview'\r\nimport axios from 'axios'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEdit, faTrash, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core'\r\nimport PropTypes from \"prop-types\";\r\nlibrary.add(faEdit, faTrash, faEllipsisV)\r\n\r\nconst styles = theme => ({});\r\n\r\nclass Create extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            type: props.location.state ? props.location.state.type : \"create\",\r\n            payload: props.location.state ? props.location.state.data : {\r\n                firstName: '',\r\n                lastName: '',\r\n                age: '',\r\n                photo: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let { payload, type } = this.state\r\n        const { firstName, lastName, age } = payload\r\n\r\n        if(firstName.length < 3) {\r\n            this.firstName.focus()\r\n            return alert('Minimum length for first name is 3 character.')\r\n        }\r\n\r\n        if(lastName.length < 3) {\r\n            this.lastName.focus()\r\n            return alert('Minimum length for last name is 3 character.')\r\n        }\r\n\r\n        if(age > 100) {\r\n            this.age.focus()\r\n            return alert('Maximum number for age is 100.')\r\n        }\r\n\r\n        payload = {\r\n            ...payload,\r\n            age: Number(payload.age)\r\n        }\r\n        let id = payload.id\r\n        delete payload.id\r\n        try {\r\n            const res = type === \"edit\" ? await axios.put('https://simple-contact-crud.herokuapp.com/contact/' + id, payload) : await axios.post('https://simple-contact-crud.herokuapp.com/contact', payload)\r\n            if(res && res.status === 201) {\r\n                alert(res.data.message)\r\n                this.props.history.push('/')\r\n            }\r\n        } catch (error) {\r\n            alert(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { payload, type } = this.state\r\n        const { firstName, lastName, age, photo } = payload\r\n        return (\r\n            <FlexView column grow style={{ paddingLeft: '50vh', paddingRight: '50vh', marginTop: 20 }}>\r\n                <div>Form {type.charAt(0).toUpperCase() + type.slice(1)} Contact</div>\r\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.firstName = input; }}  className={classes.textField} value={firstName} required onChange={(e) => this.setState({ payload: { ...payload, firstName: e.target.value } })} margin=\"normal\" fullWidth label=\"First Name\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.lastName = input; }} value={lastName} required onChange={(e) => this.setState({ payload: { ...payload, lastName: e.target.value } })} margin=\"normal\" fullWidth label=\"Last Name\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.age = input; }} type=\"number\" value={age} required onChange={(e) => this.setState({ payload: { ...payload, age: e.target.value } })} margin=\"normal\" fullWidth label=\"Age\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} value={photo} required onChange={(e) => this.setState({ payload: { ...payload, photo: e.target.value } })} margin=\"normal\" fullWidth label=\"Photo URL\" variant=\"outlined\" />\r\n                    {type !== \"view\" && (\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    )}\r\n                </form>\r\n                <div style={{ marginTop: 10}}>\r\n                    <Button onClick={() => this.props.history.push('/')} variant=\"contained\" color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </FlexView>\r\n        )\r\n    }\r\n}\r\n\r\nCreate.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Create)","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\nimport Home from './Container/Home'\r\nimport Create from \"./Container/Create\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\r\n          <Switch>\r\n            <Route component={Create} exact path=\"/create\" />\r\n            <Route component={Create} exact path=\"/edit\" />\r\n            <Route component={Create} exact path=\"/detail\" />\r\n            <Route component={Home} exact path=\"/\" />\r\n          </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}