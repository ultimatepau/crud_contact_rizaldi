{"version":3,"sources":["Container/Home.js","Container/Create.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faEdit","faTrash","faEllipsisV","Home","props","getData","a","axios","get","response","status","setState","data","columns","name","options","customBodyRender","val","tableMeta","onClick","handleAction","rowIndex","style","backgroundColor","borderWidth","padding","cursor","marginRight","color","icon","handleDelete","index","state","id","delete","res","alert","message","console","log","history","push","type","this","map","firstName","lastName","age","photo","width","grow","column","hAlignContent","marginTop","paddingTop","paddingBottom","borderRadius","theme","createMuiTheme","overrides","MuiPaper","root","title","selectableRows","sort","filter","viewColumns","print","download","Component","Create","handleSubmit","e","preventDefault","payload","length","focus","Number","put","post","location","classes","paddingLeft","paddingRight","charAt","toUpperCase","slice","onSubmit","autoComplete","TextField","disabled","inputRef","input","className","textField","value","required","onChange","target","margin","fullWidth","label","variant","Button","withStyles","App","basename","process","component","exact","path","React","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.d2d570f5.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport FlexView from 'react-flexview'\r\nimport axios from 'axios'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faTrash, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(faEdit, faTrash, faEllipsisV)\r\n\r\nconst getMuiTheme = () => createMuiTheme({\r\n    overrides: {\r\n      MuiPaper: {\r\n        root: {\r\n          width: \"100%\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n)\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        const response = await axios.get('https://simple-contact-crud.herokuapp.com/contact')\r\n        if(response.status === 200) this.setState({ data: response.data.data})\r\n    }\r\n\r\n    columns = [\r\n        \"First Name\", \"Last Name\", \"Age\", \"Photo Url\",\r\n        {\r\n            name: \"Action\",\r\n            options: {\r\n                customBodyRender: (val, tableMeta) => {\r\n                    return (\r\n                        <div>\r\n                            <button onClick={() => this.handleAction('edit', tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\", marginRight: 10 }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"edit\" />\r\n                            </button>\r\n                            <button onClick={() => this.handleDelete(tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\", marginRight: 10 }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"trash\" />\r\n                            </button>\r\n                            <button onClick={() => this.handleAction('detail', tableMeta.rowIndex)} style={{ backgroundColor: \"#0074d9\", borderWidth: 0, padding: 10, cursor: \"pointer\" }}>\r\n                                <FontAwesomeIcon color=\"#fff\" icon=\"ellipsis-v\" />\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    handleDelete = async (index) => {\r\n        const { data } = this.state\r\n        const { id } = data[index]\r\n        try {\r\n            const res = await axios.delete('https://simple-contact-crud.herokuapp.com/contact/' + id)\r\n            if(res && res.status === 202) {\r\n                alert(res.data.message)\r\n                this.setState({ data: [] }, () => this.getData())\r\n            }\r\n        } catch(error) {\r\n            console.log('response : ', error.response)\r\n            alert(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    handleAction = (name, index) => {\r\n        const { data } = this.state\r\n        switch(name) {\r\n            case \"edit\":\r\n                this.props.history.push('/edit', { type: \"edit\", data: data[index] })\r\n                break\r\n            case \"trash\":\r\n                \r\n                break\r\n            case \"detail\":\r\n                this.props.history.push('/detail', { type: \"view\", data: data[index] })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { data } = this.state\r\n        data = data.map((data, index) => {\r\n            const { firstName, lastName, age, photo } = data\r\n            return [ firstName, lastName, age, photo ]\r\n        })\r\n\r\n        return (\r\n            <div style={{ width: \"100%\" }}>\r\n                <FlexView grow column hAlignContent=\"center\" style={{ marginTop: 20 }}>\r\n                    <FlexView>\r\n                        <button onClick={() => this.props.history.push('/create')} style={{ borderWidth: 0, padding: 30, paddingTop: 10, paddingBottom: 10, borderRadius: 30, cursor: \"pointer\" }}>Create</button>\r\n                    </FlexView>\r\n                    <FlexView grow style={{ width: '80%', marginTop: 20 }}>\r\n                        <MuiThemeProvider theme={getMuiTheme()}>\r\n                            <MUIDataTable\r\n                                title={\"Employee List\"}\r\n                                data={data}\r\n                                columns={this.columns}\r\n                                options={{ selectableRows: false, sort: false, filter: false, viewColumns: false, print: false, download: false }} />\r\n                        </MuiThemeProvider>\r\n                    </FlexView>\r\n                </FlexView>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n  export default Home","import React, { Component } from 'react'\r\nimport FlexView from 'react-flexview'\r\nimport axios from 'axios'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faEdit, faTrash, faEllipsisV } from '@fortawesome/free-solid-svg-icons'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core'\r\nimport PropTypes from \"prop-types\";\r\nlibrary.add(faEdit, faTrash, faEllipsisV)\r\n\r\nconst styles = theme => ({});\r\n\r\nclass Create extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            type: props.location.state ? props.location.state.type : \"create\",\r\n            payload: props.location.state ? props.location.state.data : {\r\n                firstName: '',\r\n                lastName: '',\r\n                age: '',\r\n                photo: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        let { payload, type } = this.state\r\n        const { firstName, lastName, age } = payload\r\n\r\n        if(firstName.length < 3) {\r\n            this.firstName.focus()\r\n            return alert('Minimum length for first name is 3 character.')\r\n        }\r\n\r\n        if(lastName.length < 3) {\r\n            this.lastName.focus()\r\n            return alert('Minimum length for last name is 3 character.')\r\n        }\r\n\r\n        if(age > 100) {\r\n            this.age.focus()\r\n            return alert('Maximum number for age is 100.')\r\n        }\r\n\r\n        payload = {\r\n            ...payload,\r\n            age: Number(payload.age)\r\n        }\r\n        let id = payload.id\r\n        delete payload.id\r\n        try {\r\n            const res = type === \"edit\" ? await axios.put('https://simple-contact-crud.herokuapp.com/contact/' + id, payload) : await axios.post('https://simple-contact-crud.herokuapp.com/contact', payload)\r\n            if(res && res.status === 201) {\r\n                alert(res.data.message)\r\n                this.props.history.push('/')\r\n            }\r\n        } catch (error) {\r\n            alert(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        const { payload, type } = this.state\r\n        const { firstName, lastName, age, photo } = payload\r\n        return (\r\n            <FlexView column grow style={{ paddingLeft: '50vh', paddingRight: '50vh', marginTop: 20 }}>\r\n                <div>Form {type.charAt(0).toUpperCase() + type.slice(1)} Contact</div>\r\n                <form onSubmit={this.handleSubmit} autoComplete=\"off\">\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.firstName = input; }}  className={classes.textField} value={firstName} required onChange={(e) => this.setState({ payload: { ...payload, firstName: e.target.value } })} margin=\"normal\" fullWidth label=\"First Name\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.lastName = input; }} value={lastName} required onChange={(e) => this.setState({ payload: { ...payload, lastName: e.target.value } })} margin=\"normal\" fullWidth label=\"Last Name\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} inputRef={(input) => { this.age = input; }} type=\"number\" value={age} required onChange={(e) => this.setState({ payload: { ...payload, age: e.target.value } })} margin=\"normal\" fullWidth label=\"Age\" variant=\"outlined\" />\r\n                    <TextField disabled={type === \"view\"} value={photo} required onChange={(e) => this.setState({ payload: { ...payload, photo: e.target.value } })} margin=\"normal\" fullWidth label=\"Photo URL\" variant=\"outlined\" />\r\n                    {type !== \"view\" && (\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Submit\r\n                        </Button>\r\n                    )}\r\n                </form>\r\n                <div style={{ marginTop: 10}}>\r\n                    <Button onClick={() => this.props.history.push('/')} variant=\"contained\" color=\"default\">\r\n                        Cancel\r\n                    </Button>\r\n                </div>\r\n            </FlexView>\r\n        )\r\n    }\r\n}\r\n\r\nCreate.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Create)","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Home from './Container/Home'\nimport Create from \"./Container/Create\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router basename={`${process.env.PUBLIC_URL}/`}>\n          <Switch>\n            <Route component={Create} exact path=\"/create\" />\n            <Route component={Create} exact path=\"/edit\" />\n            <Route component={Create} exact path=\"/detail\" />\n            <Route component={Home} exact path=\"/\" />\n          </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}